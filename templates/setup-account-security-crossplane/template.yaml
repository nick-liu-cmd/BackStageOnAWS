apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: setup-account-security
  title: Setup Account security by Crossplane
  description: Setup account security such as CloudTrail, GuardDuty etc.
  tags: ['security', 'account', 'cloudtrail', 'guardduty', crossplane]
spec:
  owner: guest
  type: service
  parameters:
    - title: Fill in some steps
      required:
        - name
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: User
    - title: AWS environment
      properties:
        region:
          title: region
          type: string
          default: us-east-1
          description: AWS Region
          ui:autofocus: true
    - title: Configuration
      properties:
        bucketName:
          title: bucketName
          type: string
          default: ""
          description: Amazon S3 bucket name for CloudTrail logs
          ui:autofocus: true
    - title: Configuration repository options
      properties:
        repoUrl: # need a place to store this entity information.
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            # allowedOwners: ['shazi7804']
            allowedHosts: ['github.com']
        formBranch:
          type: string
          default: trail/crossplane
        targetBranchName:
          default: main
          type: string
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        targetPath: ./templates/backstage/setup-account-security
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          region: ${{ parameters.region }}
          bucketName: ${{ parameters.bucketName }}
    - id: pull-request
      name: Publishing Pull Request to Github
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: ${{ parameters.formBranch }}
        targetBranchName: ${{ parameters.targetBranchName }}
        title: Create an Amazon VPC
        description: Create an Amazon VPC with CIDR block ${{ parameters.vpcCidrBlock }}
        commitMessage: Create an Amazon VPC with CIDR block ${{ parameters.vpcCidrBlock }} by ${{ parameters.owner }}
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
